// üß™ Mock –¥–ª—è auth —Ñ—É–Ω–∫—Ü–∏–π

export const signUp = jest.fn(async ({ email, password, name }) => ({
  success: true,
  user: { id: 'test-user-id', email, name: name ?? 'Test User' },
  message: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞'
}))

export const signIn = jest.fn(async ({ email, password }) => ({
  success: true,
  user: { id: 'test-user-id', email, name: 'Test User', subscription: 'free', createdAt: new Date(), lastLoginAt: new Date() },
  message: '–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω'
}))

export const signOut = jest.fn(async () => ({
  success: true,
  message: '–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω'
}))

export const resetPassword = jest.fn(async () => ({
  success: true,
  message: '–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ'
}))

export const updatePassword = jest.fn(async () => ({
  success: true,
  message: '–ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω'
}))

export const confirmEmail = jest.fn(async (token) => {
  if (typeof token === 'string' && token.includes('invalid')) {
    return { success: false, error: '–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ' }
  }
  return { success: true, message: 'Email —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!' }
})

export const signInWithGoogle = jest.fn(async () => ({
  success: true,
  message: '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ Google...'
}))

export const signInWithGitHub = jest.fn(async () => ({
  success: true,
  message: '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ GitHub...'
}))

export const getUserProfile = jest.fn(async (userId) => {
  if (userId === 'test-user-id') {
    return { id: userId, email: 'test@taskai.space', name: 'Test User', subscription: 'free', createdAt: new Date(), lastLoginAt: new Date() }
  }
  return null
})

export const getCurrentUser = jest.fn(async () => null)

export const getCurrentUserFromRequest = jest.fn(async () => null)

export const updateUserProfile = jest.fn(async (userId, updates) => ({
  success: true,
  message: '–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω',
  user: { id: userId, email: 'test@taskai.space', name: updates.name || 'Test User', subscription: updates.subscription || 'free', createdAt: new Date(), lastLoginAt: new Date() }
}))
