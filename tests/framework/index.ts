/**
 * üß™ –ï–¥–∏–Ω—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –ì–ª–∞–≤–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç
 * 
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
 * - TestFramework - –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫
 * - TestLogger - —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 * - TestMocks - —Å–∏—Å—Ç–µ–º–∞ –º–æ–∫–æ–≤
 * - TestUtils - —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–æ–≤
 */

// –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫
export { TestFramework, testFramework } from './TestFramework'
export type { TestConfig, TestContext } from './TestFramework'

// –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
export { LogLevel, TestLogger, testLogger } from './TestLogger'
export type { LogEntry, LoggerConfig } from './TestLogger'

// –°–∏—Å—Ç–µ–º–∞ –º–æ–∫–æ–≤
export { TestMocks, testMocks } from './TestMocks'
export type { MockConfig, MockData } from './TestMocks'

// –£—Ç–∏–ª–∏—Ç—ã
export { TestUtils, testUtils } from './TestUtils'
export type { TestDataGenerator, TestUtilsConfig } from './TestUtils'

// –î–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –∏–∑ TestFramework
export { TestCase, TestSuite, WithMockData, WithMocks, WithPerformance, WithRetry } from './TestFramework'

// –î–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –∏–∑ TestLogger
export { LogPerformance, LogStep, LogTest } from './TestLogger'

// –î–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –∏–∑ TestUtils
export { WithPerformance as WithPerformanceUtils, WithRetry as WithRetryUtils } from './TestUtils'

// –•—É–∫–∏
export { useTestFramework } from './TestFramework'

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –º–æ–∫–æ–≤
export { mockUtils } from './TestFramework'

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
export const TEST_CONSTANTS = {
    DEFAULT_TIMEOUT: 5000,
    DEFAULT_RETRIES: 3,
    MOCK_USER_ID: 'mock-user-1',
    MOCK_TASK_ID: 'mock-task-1',
    MOCK_SUBSCRIPTION_ID: 'mock-sub-1',
    TEST_EMAIL: 'test@example.com',
    TEST_PASSWORD: 'testpassword123'
} as const

// –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
export const TEST_CONFIGS = {
    UNIT: {
        enableLogging: false,
        mockMode: true,
        timeout: 5000,
        retries: 1,
        parallel: false
    },
    INTEGRATION: {
        enableLogging: true,
        mockMode: true,
        timeout: 10000,
        retries: 2,
        parallel: false
    },
    E2E: {
        enableLogging: true,
        mockMode: false,
        timeout: 30000,
        retries: 3,
        parallel: true
    }
} as const

// –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–∫–∏
export const MOCK_CONFIGS = {
    MINIMAL: {
        enableAuth: true,
        enableDatabase: false,
        enableAPI: false,
        enableNavigation: false,
        enableStorage: false,
        enableNotifications: false
    },
    FULL: {
        enableAuth: true,
        enableDatabase: true,
        enableAPI: true,
        enableNavigation: true,
        enableStorage: true,
        enableNotifications: true
    },
    API_ONLY: {
        enableAuth: false,
        enableDatabase: false,
        enableAPI: true,
        enableNavigation: false,
        enableStorage: false,
        enableNotifications: false
    }
} as const

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞
export const quickStart = {
    unit: () => {
        testFramework.updateConfig(TEST_CONFIGS.UNIT)
        testMocks.updateConfig(MOCK_CONFIGS.MINIMAL)
        testMocks.setupAllMocks()
    },

    integration: () => {
        testFramework.updateConfig(TEST_CONFIGS.INTEGRATION)
        testMocks.updateConfig(MOCK_CONFIGS.FULL)
        testMocks.setupAllMocks()
    },

    e2e: () => {
        testFramework.updateConfig(TEST_CONFIGS.E2E)
        testMocks.updateConfig(MOCK_CONFIGS.API_ONLY)
        testMocks.setupAllMocks()
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
export const cleanup = {
    all: () => {
        testMocks.clearAllMocks()
        testLogger.clear()
    },

    mocks: () => {
        testMocks.clearAllMocks()
    },

    logs: () => {
        testLogger.clear()
    }
}

// –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
import { testFramework } from './TestFramework'
import { testLogger } from './TestLogger'
import { testMocks } from './TestMocks'
import { testUtils } from './TestUtils'

// –≠–∫—Å–ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
export default {
    framework: testFramework,
    logger: testLogger,
    mocks: testMocks,
    utils: testUtils,
    constants: TEST_CONSTANTS,
    configs: TEST_CONFIGS,
    mockConfigs: MOCK_CONFIGS,
    quickStart,
    cleanup
}
