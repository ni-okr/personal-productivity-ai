import { expect, test } from '@playwright/test'
import { allure } from 'allure-playwright'

test.describe('üéØ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Allure –æ—Ç—á–µ—Ç–æ–≤', () => {

    test('‚úÖ –£—Å–ø–µ—à–Ω—ã–π —Ç–µ—Å—Ç —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ —à–∞–≥–∞–º–∏', async ({ page }) => {
        await allure.epic('–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è')
        await allure.feature('Allure –æ—Ç—á–µ—Ç—ã')
        await allure.story('–ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å')
        await allure.severity('critical')
        await allure.description('–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Allure –æ—Ç—á–µ—Ç–æ–≤ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ —à–∞–≥–∞–º–∏')
        await allure.tag('demo')

        await allure.step('–ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É', async () => {
            await page.goto('https://playwright.dev')
            await allure.attachment('URL', 'https://playwright.dev', 'text/plain')
        })

        await allure.step('–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã', async () => {
            const title = await page.title()
            await allure.attachment('Page Title', title, 'text/plain')
            expect(title).toContain('Playwright')
        })

        await allure.step('–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã', async () => {
            await expect(page.locator('h1')).toBeVisible()
            await expect(page.locator('nav')).toBeVisible()
        })
    })

    test('‚úÖ –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫', async ({ page }) => {
        await allure.epic('–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è')
        await allure.feature('–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫')
        await allure.story('–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏')
        await allure.severity('normal')
        await allure.description('–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤')
        await allure.tag('resilience')

        await allure.step('–ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É', async () => {
            await page.goto('https://playwright.dev')
        })

        await allure.step('–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ', async () => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
            await expect(page.locator('h1')).toContainText('Playwright')
        })
    })

    test('‚ö†Ô∏è –¢–µ—Å—Ç —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º', async ({ page }) => {
        await allure.epic('–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è')
        await allure.feature('–†–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã')
        await allure.story('–¢–µ—Å—Ç —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏')
        await allure.severity('normal')
        await allure.description('–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ç–µ—Å—Ç —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏')
        await allure.tag('warning')

        await allure.step('–í—ã–ø–æ–ª–Ω—è–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏', async () => {
            await page.goto('https://playwright.dev')

            // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            await allure.attachment('Warning', '–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', 'text/plain')

            await expect(page.locator('h1')).toBeVisible()
        })
    })

    test('üìä –¢–µ—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏', async ({ page }) => {
        await allure.epic('–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è')
        await allure.feature('–í–ª–æ–∂–µ–Ω–∏—è')
        await allure.story('–°–∫—Ä–∏–Ω—à–æ—Ç—ã –∏ –¥–∞–Ω–Ω—ã–µ')
        await allure.severity('normal')
        await allure.description('–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –≤–ª–æ–∂–µ–Ω–∏—è–º–∏ –≤ Allure')
        await allure.tag('attachments')

        await allure.step('–û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç', async () => {
            await page.goto('https://playwright.dev')

            // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
            const screenshot = await page.screenshot()
            await allure.attachment('–°–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã', screenshot, 'image/png')
        })

        await allure.step('–°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ', async () => {
            const title = await page.title()
            const url = page.url()
            const viewport = page.viewportSize()

            const pageInfo = {
                title,
                url,
                viewport,
                timestamp: new Date().toISOString()
            }

            await allure.attachment('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ', JSON.stringify(pageInfo, null, 2), 'application/json')
        })
    })
})
