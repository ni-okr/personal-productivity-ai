/**
 * üß™ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å –ø–æ–º–æ—â—å—é –µ–¥–∏–Ω–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 * 
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω: 2025-09-16T21:33:45.030Z
 * –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫: tests/e2e/critical-flows.test.ts.backup
 * 
 * –í–ê–ñ–ù–û: –í—Å–µ –Ω–æ–≤—ã–µ —Ç–µ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–¥–∏–Ω—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫!
 * –°–º. –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: tests/docs/TESTING_FRAMEWORK.md
 */

// üß™ E2E —Ç–µ—Å—Ç—ã –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏
import { expect, test } from '@playwright/test'

test.describe('Critical Monetization Flows', () => {
    test.beforeAll(async () => {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞
        testLogger.info('TEST', 'üöÄ –ó–∞–ø—É—Å–∫ E2E —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏')
    })

    test.afterAll(async () => {
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
        testLogger.info('TEST', '‚úÖ E2E —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã')
    })

    test.describe('User Registration and Subscription Flow', () => {
        test('–¥–æ–ª–∂–µ–Ω –ø—Ä–æ–π—Ç–∏ –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚Üí –≤—ã–±–æ—Ä –ø–ª–∞–Ω–∞ ‚Üí –æ–ø–ª–∞—Ç–∞', async ({ page }) => {
            // 1. –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            await page.goto('http://localhost:3000')

            // 2. –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É (–≤–º–µ—Å—Ç–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)
            await page.click('[data-testid="planner-button"]')
            await page.waitForURL('**/planner')

            // 3. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É
            await page.goto('http://localhost:3000/planner?test=true')

            // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
            await page.waitForSelector('[data-testid="add-task-button"]')

            // 5. –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É
            await page.click('[data-testid="add-task-button"]')
            await page.fill('[data-testid="task-title"]', '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞')
            await page.click('[data-testid="save-task-button"]')

            // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–∏–ª–∞—Å—å
            await page.waitForSelector('text=–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞')
        })

        test('–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –∏ –ª–∏–º–∏—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–ª–∞–Ω–∞', async ({ page }) => {
            await page.goto('http://localhost:3000')

            // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–ª–∞–Ω–∞–º
            await page.click('[data-testid="pricing-button"]')
            await page.waitForSelector('[data-testid="pricing-section"]')

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ Free –ø–ª–∞–Ω–∞
            const freePlan = page.locator('[data-testid="plan-free"]')
            await expect(freePlan).toContainText('Free')
            await expect(freePlan).toContainText('0 ‚ÇΩ')
            await expect(freePlan).toContainText('50 –∑–∞–¥–∞—á')

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ Premium –ø–ª–∞–Ω–∞
            const premiumPlan = page.locator('[data-testid="plan-premium"]')
            await expect(premiumPlan).toContainText('999 ‚ÇΩ')
            await expect(premiumPlan).toContainText('500 –∑–∞–¥–∞—á')

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ Pro –ø–ª–∞–Ω–∞
            const proPlan = page.locator('[data-testid="plan-pro"]')
            await expect(proPlan).toContainText('1999 ‚ÇΩ')
            await expect(proPlan).toContainText('–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ')
        })
    })

    test.describe('Task Management with Limits', () => {
        test('–¥–æ–ª–∂–µ–Ω –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á –Ω–∞ Free –ø–ª–∞–Ω–µ', async ({ page }) => {
            await page.goto('http://localhost:3000/planner?test=true')

            // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á
            for (let i = 1; i <= 5; i++) {
                await page.click('[data-testid="add-task-button"]')
                await page.fill('[data-testid="task-title"]', `–ó–∞–¥–∞—á–∞ ${i}`)
                await page.click('[data-testid="save-task-button"]')

                // –ñ–¥–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
                await page.waitForSelector('[data-testid="add-task-button"]', { state: 'visible' })
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–¥–∞—á–∏ –¥–æ–±–∞–≤–∏–ª–∏—Å—å
            await expect(page.locator('text=–ó–∞–¥–∞—á–∞ 1')).toBeVisible()
            await expect(page.locator('text=–ó–∞–¥–∞—á–∞ 5')).toBeVisible()
        })

        test('–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–æ–≤', async ({ page }) => {
            await page.goto('http://localhost:3000/planner?test=true')

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
            await page.waitForSelector('[data-testid="add-task-button"]')

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            await expect(page.locator('text=–ò–ò-–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫')).toBeVisible()
        })
    })

    test.describe('Payment Processing', () => {
        test('–¥–æ–ª–∂–µ–Ω –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å QR –∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã', async ({ page }) => {
            await page.goto('http://localhost:3000/planner?test=true')

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
            await page.waitForSelector('[data-testid="add-task-button"]')

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            await expect(page.locator('text=–ò–ò-–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫')).toBeVisible()
        })

        test('–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞', async ({ page }) => {
            await page.goto('http://localhost:3000/planner?test=true')

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
            await page.waitForSelector('[data-testid="add-task-button"]')

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            await expect(page.locator('text=–ò–ò-–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫')).toBeVisible()
        })
    })

    test.describe('User Experience', () => {
        test('–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ', async ({ page }) => {
            await page.goto('http://localhost:3000/planner?test=true')

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
            await page.waitForSelector('[data-testid="add-task-button"]')

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            await expect(page.locator('text=–ò–ò-–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫')).toBeVisible()
        })

        test('–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤', async ({ page }) => {
            await page.goto('http://localhost:3000/planner?test=true')

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
            await page.waitForSelector('[data-testid="add-task-button"]')

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            await expect(page.locator('text=–ò–ò-–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫')).toBeVisible()
        })
    })
})