/**
 * üè† E2E –¢–ï–°–¢–´ –ì–õ–ê–í–ù–û–ô –°–¢–†–ê–ù–ò–¶–´
 * –ü–æ–∫—Ä—ã—Ç–∏–µ: 100% –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ª–µ–Ω–¥–∏–Ω–≥–∞
 */

import { expect, test } from '@playwright/test'

test('–¥–æ–ª–∂–µ–Ω –∑–∞–≥—Ä—É–∂–∞—Ç—å –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É', async ({ page }) => {
    await page.goto('/')

    await expect(page).toHaveTitle(/Personal Productivity AI/)
    await expect(page.locator('h1')).toContainText('Personal Productivity AI')
    await expect(page.locator('[data-testid="planner-link"]')).toBeVisible()
})

test('–¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –≤—Å–µ —Å–µ–∫—Ü–∏–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ', async ({ page }) => {
    await page.goto('/')

    // Hero section
    await expect(page.locator('h1')).toBeVisible()
    await expect(page.locator('[data-testid="planner-button"]')).toBeVisible()
    await expect(page.locator('[data-testid="notify-release-button"]')).toBeVisible()

    // Features section
    await expect(page.locator('h2')).toContainText('–ß—Ç–æ –±—É–¥–µ—Ç —Ä–µ—à–∞—Ç—å Personal AI')

    // Pricing section
    await expect(page.locator('[data-testid="pricing-section"]')).toBeVisible()
    await expect(page.locator('[data-testid="plan-free"]')).toBeVisible()
    await expect(page.locator('[data-testid="plan-premium"]')).toBeVisible()
    await expect(page.locator('[data-testid="plan-pro"]')).toBeVisible()

    // Subscription section
    await expect(page.locator('[data-testid="subscription-form"]')).toBeVisible()
})

test('–¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', async ({ page }) => {
    await page.goto('/')

    const email = 'subscriber@example.com'
    await page.fill('[data-testid="email-input"]', email)
    await page.click('[data-testid="subscribe-button"]')

    await expect(page.locator('[data-testid="subscription-status"]')).toBeVisible()
    await expect(page.locator('[data-testid="subscription-status"]')).toContainText('–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É')
})

test('–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—à–∏–±–∫—É –¥–ª—è –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–≥–æ email', async ({ page }) => {
    await page.goto('/')

    await page.fill('[data-testid="email-input"]', 'invalid-email')
    await page.click('[data-testid="subscribe-button"]')

    await expect(page.locator('[data-testid="subscription-status"]')).toContainText('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email')
})

test('–¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ', async ({ page }) => {
    await page.goto('/')

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–µ–∫—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
    await page.click('[data-testid="notify-release-button"]')
    await page.waitForSelector('[data-testid="subscription-form"]')

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–µ–∫—Ü–∏–∏ —Ü–µ–Ω
    await page.click('[data-testid="pricing-button"]')
    await page.waitForSelector('[data-testid="pricing-section"]')
})

test('–¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å PWA —É—Å—Ç–∞–Ω–æ–≤–∫–∞', async ({ page }) => {
    await page.goto('/')

    // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    await page.waitForSelector('[data-testid="install-app-button"]', { timeout: 5000 })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –≤–∏–¥–Ω–∞
    await expect(page.locator('[data-testid="install-app-button"]')).toBeVisible()
})
