-- üéõÔ∏è Feature Toggles —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è Trunk-based Development
-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è feature toggles

-- –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É feature_toggles
CREATE TABLE IF NOT EXISTS feature_toggles (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name VARCHAR(100) UNIQUE NOT NULL,
  enabled BOOLEAN DEFAULT false,
  type VARCHAR(20) CHECK (type IN ('hot', 'cold')) DEFAULT 'hot',
  description TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
CREATE INDEX IF NOT EXISTS idx_feature_toggles_name ON feature_toggles(name);
CREATE INDEX IF NOT EXISTS idx_feature_toggles_type ON feature_toggles(type);
CREATE INDEX IF NOT EXISTS idx_feature_toggles_enabled ON feature_toggles(enabled);

-- –í–∫–ª—é—á–∞–µ–º RLS (Row Level Security)
ALTER TABLE feature_toggles ENABLE ROW LEVEL SECURITY;

-- –°–æ–∑–¥–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
-- –ü—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–∞ —á—Ç–µ–Ω–∏–µ (–¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π)
CREATE POLICY "Public read access" ON feature_toggles 
  FOR SELECT USING (true);

-- –¢–æ–ª—å–∫–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å hot toggles
CREATE POLICY "Authenticated users can update hot toggles" ON feature_toggles 
  FOR UPDATE USING (auth.role() = 'authenticated' AND type = 'hot');

-- –¢–æ–ª—å–∫–æ service role –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–¥–∞–ª—è—Ç—å toggles
CREATE POLICY "Service role can manage toggles" ON feature_toggles 
  FOR ALL USING (auth.role() = 'service_role');

-- –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ language 'plpgsql';

-- –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE TRIGGER update_feature_toggles_updated_at 
  BEFORE UPDATE ON feature_toggles 
  FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- –í—Å—Ç–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ feature toggles
INSERT INTO feature_toggles (name, enabled, type, description) VALUES
  -- Hot toggles (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å –≤ runtime)
  ('new-ai-features', false, 'hot', '–ù–æ–≤—ã–µ –ò–ò —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏'),
  ('advanced-analytics', false, 'hot', '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã'),
  ('pwa-features', false, 'hot', 'PWA —Ñ—É–Ω–∫—Ü–∏–∏ (–æ—Ñ–ª–∞–π–Ω, push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)'),
  ('beta-features', false, 'hot', '–ë–µ—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'),
  
  -- Cold toggles (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ)
  ('debug-mode', false, 'cold', '–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è'),
  ('experimental-ui', false, 'cold', '–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π UI'),
  ('performance-monitoring', false, 'cold', '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'),
  ('security-audit', false, 'cold', '–ê—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏')
ON CONFLICT (name) DO NOTHING;

-- –°–æ–∑–¥–∞–µ–º view –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–∫—Ç–∏–≤–Ω—ã–º toggles
CREATE OR REPLACE VIEW active_feature_toggles AS
SELECT 
  name,
  enabled,
  type,
  description
FROM feature_toggles
WHERE enabled = true;

-- –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö toggles –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
CREATE OR REPLACE FUNCTION get_all_feature_toggles()
RETURNS JSON AS $$
BEGIN
  RETURN (
    SELECT json_object_agg(name, enabled)
    FROM feature_toggles
  );
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è hot toggle
CREATE OR REPLACE FUNCTION update_hot_toggle(toggle_name TEXT, toggle_enabled BOOLEAN)
RETURNS BOOLEAN AS $$
BEGIN
  UPDATE feature_toggles 
  SET enabled = toggle_enabled, updated_at = NOW()
  WHERE name = toggle_name AND type = 'hot';
  
  RETURN FOUND;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è toggle —Å—Ç–∞—Ç—É—Å–∞
CREATE OR REPLACE FUNCTION get_toggle_status(toggle_name TEXT)
RETURNS BOOLEAN AS $$
DECLARE
  toggle_enabled BOOLEAN;
BEGIN
  SELECT enabled INTO toggle_enabled
  FROM feature_toggles
  WHERE name = toggle_name;
  
  RETURN COALESCE(toggle_enabled, false);
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
COMMENT ON TABLE feature_toggles IS '–¢–∞–±–ª–∏—Ü–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è feature toggles –≤ —Å–∏—Å—Ç–µ–º–µ Trunk-based Development';
COMMENT ON COLUMN feature_toggles.name IS '–£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è toggle (–Ω–∞–ø—Ä–∏–º–µ—Ä: new-ai-features)';
COMMENT ON COLUMN feature_toggles.enabled IS '–í–∫–ª—é—á–µ–Ω –ª–∏ toggle (true/false)';
COMMENT ON COLUMN feature_toggles.type IS '–¢–∏–ø toggle: hot (runtime) –∏–ª–∏ cold (build-time)';
COMMENT ON COLUMN feature_toggles.description IS '–û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ toggle';

COMMENT ON FUNCTION get_all_feature_toggles() IS '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ toggles –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON';
COMMENT ON FUNCTION update_hot_toggle(TEXT, BOOLEAN) IS '–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å hot toggle';
COMMENT ON FUNCTION get_toggle_status(TEXT) IS '–ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ toggle';
