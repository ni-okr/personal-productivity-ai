// üí≥ API endpoint –¥–ª—è –∂–∏–≤–æ–π –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ –¢–∏–Ω—å–∫–æ—Ñ—Ñ (–ø—Ä–æ–¥–∞–∫—à–Ω)

import { createLiveTinkoffPayment } from '@/lib/tinkoff-api'
import { NextRequest, NextResponse } from 'next/server'

export async function POST(request: NextRequest) {
    try {
        const { amount, description, planId } = await request.json()

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!amount || !description || !planId) {
            return NextResponse.json(
                { success: false, error: '–ù–µ–æ–±—Ö–æ–¥–∏–º—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: amount, description, planId' },
                { status: 400 }
            )
        }

        // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –∑–∞–∫–∞–∑–∞
        const orderId = `live_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`

        console.log('üí≥ –°–æ–∑–¥–∞–Ω–∏–µ –∂–∏–≤–æ–π –æ–ø–ª–∞—Ç—ã', {
            amount,
            description,
            planId,
            orderId,
            hasTerminalKey: !!process.env.TINKOFF_TERMINAL_KEY,
            hasSecretKey: !!process.env.TINKOFF_SECRET_KEY
        })

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–π –¢–∏–Ω—å–∫–æ—Ñ—Ñ
        const hasTinkoffKeys = process.env.TINKOFF_TERMINAL_KEY && process.env.TINKOFF_SECRET_KEY

        if (!hasTinkoffKeys) {
            console.error('‚ùå –ö–ª—é—á–∏ –¢–∏–Ω—å–∫–æ—Ñ—Ñ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è –∂–∏–≤–æ–π –æ–ø–ª–∞—Ç—ã')
            return NextResponse.json(
                {
                    success: false,
                    error: '–ö–ª—é—á–∏ –¢–∏–Ω—å–∫–æ—Ñ—Ñ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã',
                    setupRequired: true,
                    setupMessage: '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π'
                },
                { status: 400 }
            )
        }

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–±–æ—á–∏–µ –∫–ª—é—á–∏ (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ *_LIVE –∏–∑ Vercel)
        const terminalKey = process.env.TINKOFF_TERMINAL_KEY || process.env.TINKOFF_TERMINAL_KEY_LIVE || ''
        const secretKey = process.env.TINKOFF_SECRET_KEY || process.env.TINKOFF_SECRET_KEY_LIVE || ''

        console.log('üí≥ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∂–∏–≤–æ–π API –¢–∏–Ω—å–∫–æ—Ñ—Ñ —Å –∫–ª—é—á–∞–º–∏:', {
            terminalKey: terminalKey,
            secretKey: secretKey ? 'SET' : 'NOT_SET'
        })

        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º amount –≤ —Ä—É–±–ª–∏ (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–æ –≤ –∫–æ–ø–µ–π–∫–∞—Ö)
        const amountInRubles = amount > 1000 ? amount / 100 : amount
        console.log('üí≥ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è amount:', { original: amount, converted: amountInRubles })

        // –°–æ–∑–¥–∞–µ–º –∂–∏–≤–æ–π –ø–ª–∞—Ç–µ–∂ (–ù–ï —Ç–µ—Å—Ç–æ–≤—ã–π)
        const paymentResponse = await createLiveTinkoffPayment(amountInRubles, description, orderId, terminalKey, secretKey)

        if (!paymentResponse.Success) {
            console.error('–û—à–∏–±–∫–∞ –¢–∏–Ω—å–∫–æ—Ñ—Ñ API:', {
                ErrorCode: paymentResponse.ErrorCode,
                Message: paymentResponse.Message,
                Details: paymentResponse.Details
            })

            return NextResponse.json(
                {
                    success: false,
                    error: paymentResponse.Message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞',
                    errorCode: paymentResponse.ErrorCode,
                    details: paymentResponse.Details
                },
                { status: 400 }
            )
        }

        console.log('‚úÖ –ñ–∏–≤–æ–π –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ –¢–∏–Ω—å–∫–æ—Ñ—Ñ API:', {
            PaymentId: paymentResponse.PaymentId,
            OrderId: paymentResponse.OrderId,
            Amount: paymentResponse.Amount
        })

        return NextResponse.json({
            success: true,
            data: {
                paymentId: paymentResponse.PaymentId,
                paymentUrl: paymentResponse.PaymentURL,
                orderId: orderId,
                amount: amount,
                description: description,
                paymentType: 'live',
                instructions: {
                    step1: '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã',
                    step2: '–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–π –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã',
                    step3: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–ª–∞—Ç–µ–∂ –≤ –≤–∞—à–µ–º –±–∞–Ω–∫–µ',
                    step4: '–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã'
                },
                setupRequired: false
            }
        })

    } catch (error: any) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∂–∏–≤–æ–π –æ–ø–ª–∞—Ç—ã:', error)
        return NextResponse.json(
            { success: false, error: error.message || '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
            { status: 500 }
        )
    }
}
