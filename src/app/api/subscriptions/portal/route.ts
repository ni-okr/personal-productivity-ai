// üè† API –¥–ª—è Stripe Customer Portal
import { getCurrentUser } from '@/lib/auth'
import { createPortalSession } from '@/lib/stripe'
import { NextRequest, NextResponse } from 'next/server'

export async function POST(request: NextRequest) {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        const user = await getCurrentUser()
        if (!user) {
            return NextResponse.json(
                { success: false, error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è' },
                { status: 401 }
            )
        }

        const { returnUrl } = await request.json()

        // –°–æ–∑–¥–∞–µ–º portal —Å–µ—Å—Å–∏—é
        const result = await createPortalSession({
            userId: user.id,
            returnUrl: returnUrl || `${process.env.NEXT_PUBLIC_APP_URL}/planner`
        })

        if (!result.success) {
            return NextResponse.json(
                { success: false, error: result.error },
                { status: 400 }
            )
        }

        return NextResponse.json({
            success: true,
            data: result.data
        })
    } catch (error: any) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è portal —Å–µ—Å—Å–∏–∏:', error)
        return NextResponse.json(
            { success: false, error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
            { status: 500 }
        )
    }
}
