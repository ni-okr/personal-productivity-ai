'use client'

// üîò –ö–Ω–æ–ø–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
import { useState } from 'react'

interface CheckoutButtonProps {
  planId: 'premium' | 'pro' | 'enterprise'
  method: 'card' | 'bank_transfer' | 'qr_code' | 'sbp'
  label?: string
}

export function CheckoutButton({ planId, method, label }: CheckoutButtonProps) {
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState<string | null>(null)

  const handleClick = async () => {
    try {
      setLoading(true)
      setError(null)

      const resp = await fetch('/api/subscriptions/create-checkout', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ planId, paymentMethod: method })
      })
      const data = await resp.json()
      if (!resp.ok || !data.success) {
        throw new Error(data.error || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ—Å—Å–∏—é –æ–ø–ª–∞—Ç—ã')
      }

      // –î–ª—è –∫–∞—Ä—Ç —Å–∫—Ä–æ–µ—Ç—Å—è paymentUrl
      if (data.data?.paymentUrl) {
        window.location.href = data.data.paymentUrl
        return
      }

      // –ò–Ω–∞—á–µ fallback ‚Äî –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫–∞–∫ —Ä–∞–Ω—å—à–µ (–±–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥/QR/–°–ë–ü)
      if (data.data?.url) {
        window.location.href = data.data.url
        return
      }

      throw new Error('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–¥—Ä–µ—Å–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞')
    } catch (e: any) {
      setError(e.message)
    } finally {
      setLoading(false)
    }
  }

  return (
    <button onClick={handleClick} disabled={loading} className="px-4 py-2 rounded bg-indigo-600 text-white disabled:opacity-60">
      {loading ? '–ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–ø–ª–∞—Ç–µ‚Ä¶' : (label || '–û—Ñ–æ—Ä–º–∏—Ç—å –æ–ø–ª–∞—Ç—É')}
      {error && <span className="block mt-2 text-sm text-red-600">{error}</span>}
    </button>
  )
}


