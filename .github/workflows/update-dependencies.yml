name: 🔄 Update Dependencies

on:
  schedule:
    # Запуск каждый понедельник в 9:00 UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update to perform'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - patch
          - minor
          - major

env:
  NODE_VERSION: '18'

jobs:
  # 🔍 Check for updates
  check-updates:
    name: 🔍 Check for Updates
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Check for outdated packages
        run: |
          echo "Checking for outdated packages..."
          npm outdated --json > outdated.json || true
          
          if [ -s outdated.json ]; then
            echo "Found outdated packages:"
            cat outdated.json
            echo "outdated=true" >> $GITHUB_OUTPUT
          else
            echo "No outdated packages found"
            echo "outdated=false" >> $GITHUB_OUTPUT
          fi
        id: check

      - name: 📊 Upload outdated packages info
        uses: actions/upload-artifact@v3
        if: steps.check.outputs.outdated == 'true'
        with:
          name: outdated-packages
          path: outdated.json

  # 🔄 Update dependencies
  update-dependencies:
    name: 🔄 Update Dependencies
    runs-on: ubuntu-latest
    needs: check-updates
    if: needs.check-updates.outputs.outdated == 'true'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔄 Update dependencies
        run: |
          case "${{ github.event.inputs.update_type || 'all' }}" in
            "patch")
              echo "Updating patch versions..."
              npm update
              ;;
            "minor")
              echo "Updating minor versions..."
              npx npm-check-updates -u --target minor
              npm install
              ;;
            "major")
              echo "Updating major versions..."
              npx npm-check-updates -u --target major
              npm install
              ;;
            "all")
              echo "Updating all versions..."
              npx npm-check-updates -u
              npm install
              ;;
          esac

      - name: 🧪 Run tests after update
        run: |
          npm run test:unit
          npm run build
        env:
          NODE_ENV: test
          NEXT_PUBLIC_DEV_MODE: 'true'
          NEXT_PUBLIC_DISABLE_EMAIL: 'true'
          TEST_EMAIL_DOMAIN: '@example.test'

      - name: 🔒 Run security audit
        run: npm audit --audit-level high

      - name: 📝 Create pull request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: '🔄 Update dependencies'
          body: |
            ## 🔄 Dependencies Update
            
            This PR updates the following dependencies:
            
            ### 📦 Updated packages
            - See the diff below for details
            
            ### 🧪 Testing
            - [x] Unit tests passed
            - [x] Build successful
            - [x] Security audit passed
            
            ### 🔍 Changes
            - Updated dependencies to latest versions
            - All tests are passing
            - No security vulnerabilities found
            
            ### 📋 Checklist
            - [x] All tests pass
            - [x] Build successful
            - [x] Security audit passed
            - [x] No breaking changes detected
            
            **Auto-generated by GitHub Actions**
          branch: update-dependencies
          delete-branch: true
          commit-message: '🔄 Update dependencies'
          title: '🔄 Update dependencies'
          body: |
            ## 🔄 Dependencies Update
            
            This PR updates the following dependencies:
            
            ### 📦 Updated packages
            - See the diff below for details
            
            ### 🧪 Testing
            - [x] Unit tests passed
            - [x] Build successful
            - [x] Security audit passed
            
            ### 🔍 Changes
            - Updated dependencies to latest versions
            - All tests are passing
            - No security vulnerabilities found
            
            ### 📋 Checklist
            - [x] All tests pass
            - [x] Build successful
            - [x] Security audit passed
            - [x] No breaking changes detected
            
            **Auto-generated by GitHub Actions**

  # 📊 Generate report
  generate-report:
    name: 📊 Generate Report
    runs-on: ubuntu-latest
    needs: [check-updates, update-dependencies]
    if: always()
    steps:
      - name: 📊 Generate update report
        run: |
          echo "## 🔄 Dependencies Update Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔍 Check Results" >> $GITHUB_STEP_SUMMARY
          echo "Outdated packages found: ${{ needs.check-updates.outputs.outdated }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔄 Update Results" >> $GITHUB_STEP_SUMMARY
          echo "Update status: ${{ needs.update-dependencies.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📅 Timestamp" >> $GITHUB_STEP_SUMMARY
          echo "Generated: $(date)" >> $GITHUB_STEP_SUMMARY
