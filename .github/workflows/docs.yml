name: 📚 Deploy Documentation

on:
  push:
    branches: [main, develop]
    paths: ['docs/**']
  pull_request:
    branches: [main, develop]
    paths: ['docs/**']
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  # 🔍 Build documentation
  build-docs:
    name: 🔍 Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build
        env:
          NODE_ENV: production

      - name: 📚 Generate API documentation
        run: |
          echo "Generating API documentation..."
          # Здесь можно добавить генерацию API документации
          # Например, с помощью TypeDoc или других инструментов

      - name: 📊 Upload docs artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docs-build
          path: docs/
          retention-days: 7

  # 🚀 Deploy to GitHub Pages
  deploy-docs:
    name: 🚀 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build
        env:
          NODE_ENV: production

      - name: 📚 Setup Pages
        uses: actions/configure-pages@v3

      - name: 📚 Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # 📊 Generate docs report
  generate-report:
    name: 📊 Generate Docs Report
    runs-on: ubuntu-latest
    needs: [build-docs, deploy-docs]
    if: always()
    steps:
      - name: 📊 Generate docs report
        run: |
          echo "## 📚 Documentation Deploy Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔍 Build Status" >> $GITHUB_STEP_SUMMARY
          echo "Status: ${{ needs.build-docs.result == 'success' && '✅ Success' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Deploy Status" >> $GITHUB_STEP_SUMMARY
          echo "Status: ${{ needs.deploy-docs.result == 'success' && '✅ Deployed' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📅 Timestamp" >> $GITHUB_STEP_SUMMARY
          echo "Generated: $(date)" >> $GITHUB_STEP_SUMMARY
